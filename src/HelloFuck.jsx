/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/hello-fck.glb -o src/HelloFuck.jsx -k -r public 
*/

import { useEffect, useMemo, useRef } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import * as THREE from 'three'
import { useSoundEffect } from './useSound'

export function HelloFuck(props) {
  const {playSound} = useSoundEffect()
  const group = useRef()

  const { scene, animations: rawAnimations } = useGLTF('/hello-fck.glb')

  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene])

  const animations = useMemo(() => {
    if (rawAnimations[0]) rawAnimations[0].name = 'Fck'
    return rawAnimations
  }, [rawAnimations])

  const { nodes, materials } = useGraph(clone)

  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    if (actions?.Fck) {
      actions.Fck.reset().fadeIn(0.2).play()
      playSound()
    }
  }, [actions])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="Armature"
          position={[0, -2, 0]}
          rotation={[
            THREE.MathUtils.degToRad(18),
            Math.PI,
            THREE.MathUtils.degToRad(2),
          ]}
          scale={0.6}
        >
          <primitive object={nodes.Radius} />
          <skinnedMesh
            name="hand"
            geometry={nodes.hand.geometry}
            material={materials.Skin}
            skeleton={nodes.hand.skeleton}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/hello-fck.glb')
